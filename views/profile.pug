extends layout

block content
  form#change-profile(action='/auth/change' method='post')
    .input-group
      label(for='change-email') 이메일
      input#change-email(type='email' name='email' value= user.email)
    .input-group
      label(for='change-nick') 닉네임
      input#change-nick(type='text' name='nick' value= user.nick)
    .input-group
      label(for='change-password') 비밀번호
      input#change-password(type='password' name='password')
    if changeError
      .error-message= changeError
    button#change-btn.btn(type='submit') 변경하기
  .timeline
    .followings.half
      h2 팔로잉 목록
      if user.Followings
        for following in user.Followings
          div
            input.following-user-id(type="hidden", value=following.id)
            span.nick= following.nick
            button.unFollowBtn 끊기
    .followers.half
      h2 팔로워 목록
      if user.Followers
        for follower in user.Followers
          div= follower.nick
  script.
    document.querySelectorAll('.unFollowBtn').forEach(function(btn) {
      // unFollow 하기
      btn.addEventListener('click', (event) => {
        // get target userId
        const userId = btn.parentNode.querySelector('.following-user-id').value;
        
        if (confirm('언팔로우 하시겠습니까?')) {
          const xhr = new XMLHttpRequest();
          xhr.onload = function(p1) {
            console.log(p1);
            if (xhr.status === 200) {
              location.reload();
            } else {
              console.error(xhr.responseText);
            }
          };
          xhr.open('POST', '/user/' + userId + '/unFollow');
          xhr.send();
        }
      })
    })

